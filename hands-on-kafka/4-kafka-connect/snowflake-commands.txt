SHOW ORGANIZATION ACCOUNTS;

drop schema kafka_db.kafka_schema;
drop database kafka_db;
drop WAREHOUSE kafka_wh;
drop user kafka_connector_user_1;
drop ROLE kafka_connector_role_1;
drop user kafka_connector_user_1;

CREATE WAREHOUSE kafka_wh;
create database kafka_db;
create schema kafka_db.kafka_schema;

-- Create a Snowflake role with the privileges to work with the connector.
CREATE ROLE kafka_connector_role_1;

-- Grant privileges on the database.
GRANT USAGE ON DATABASE kafka_db TO ROLE kafka_connector_role_1;
GRANT USAGE ON WAREHOUSE kafka_wh TO ROLE kafka_connector_role_1;

-- Grant privileges on the schema.
GRANT USAGE ON SCHEMA kafka_db.kafka_schema TO ROLE kafka_connector_role_1;
GRANT CREATE TABLE ON SCHEMA kafka_db.kafka_schema TO ROLE kafka_connector_role_1;
GRANT CREATE STAGE ON SCHEMA kafka_db.kafka_schema TO ROLE kafka_connector_role_1;
GRANT CREATE PIPE ON SCHEMA kafka_db.kafka_schema TO ROLE kafka_connector_role_1;


CREATE USER kafka_connector_user_1 PASSWORD='KafkAconn@74589' DEFAULT_ROLE = kafka_connector_role_1 DEFAULT_SECONDARY_ROLES = ('ALL');
ALTER USER kafka_connector_user_1 SET DEFAULT_WAREHOUSE = kafka_wh;

-- Grant the custom role to an existing user.
GRANT ROLE kafka_connector_role_1 TO USER kafka_connector_user_1;

-- Set the custom role as the default role for the user.
-- If you encounter an 'Insufficient privileges' error, verify the role that has the OWNERSHIP privilege on the user.
ALTER USER kafka_connector_user_1 SET DEFAULT_ROLE = kafka_connector_role_1;

alter user kafka_connector_user_1 unset rsa_public_key;
alter user kafka_connector_user_1 set rsa_public_key='MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxdtXfYo+kDEBzSidoLCnUcrrplpBP0W6I/DSeet5JVZJ9/hwiPY+Hg2xgGQohd/hAjaWMIMdrsuVjqxOcGweFDMjN84ToTLg2Sn0K0VnKePTm+WnkVJFjr9guMIF1fctsLP5lo4MRSRUui9940sQ96iiQe7XKBZwHtKBUkX/MeV5EQWBEiaIAi/p+52UW64URrmJv5fumZFuJOSQ5sRMtZQE/FDduG1ArR5lyftxGJz+RFmRGYBUmfdOIia0aHm3V5FmuwLS+dHlGKu1iibKHxDqUBLmBC42JkH3bNeHw8TyQutCCBdL4g1IAHwmKHO4NWLv9GnmHQLeOuxYzos7zQIDAQAB';

describe user kafka_connector_user_1;
